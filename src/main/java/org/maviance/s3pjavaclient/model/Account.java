/*
 * Smobilpay S3P API
 * Smobilpay Third Party API FOR PAYMENT COLLECTIONS
 *
 * OpenAPI spec version: 3.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.maviance.s3pjavaclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Account
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-18T05:58:05.742+01:00[Africa/Douala]")
public class Account {
  @SerializedName("balance")
  private Float balance = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("key")
  private String key = null;

  @SerializedName("agentId")
  private String agentId = null;

  @SerializedName("agentName")
  private String agentName = null;

  @SerializedName("agentAddress")
  private String agentAddress = null;

  @SerializedName("agentPhonenumber")
  private String agentPhonenumber = null;

  @SerializedName("companyName")
  private String companyName = null;

  @SerializedName("companyAddress")
  private String companyAddress = null;

  @SerializedName("companyPhonenumber")
  private String companyPhonenumber = null;

  @SerializedName("limitMax")
  private Float limitMax = null;

  @SerializedName("limitRemaining")
  private Float limitRemaining = null;

  public Account balance(Float balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Remaining amount in account
   * @return balance
  **/
  @Schema(required = true, description = "Remaining amount in account")
  public Float getBalance() {
    return balance;
  }

  public void setBalance(Float balance) {
    this.balance = balance;
  }

  public Account currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency of agent balance in system (e.g. XAF)(Format: ISO 4217)
   * @return currency
  **/
  @Schema(required = true, description = "Currency of agent balance in system (e.g. XAF)(Format: ISO 4217)")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Account key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Public Access key
   * @return key
  **/
  @Schema(required = true, description = "Public Access key")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public Account agentId(String agentId) {
    this.agentId = agentId;
    return this;
  }

   /**
   * Unique Agent Identifier
   * @return agentId
  **/
  @Schema(required = true, description = "Unique Agent Identifier")
  public String getAgentId() {
    return agentId;
  }

  public void setAgentId(String agentId) {
    this.agentId = agentId;
  }

  public Account agentName(String agentName) {
    this.agentName = agentName;
    return this;
  }

   /**
   * Agent full name
   * @return agentName
  **/
  @Schema(required = true, description = "Agent full name")
  public String getAgentName() {
    return agentName;
  }

  public void setAgentName(String agentName) {
    this.agentName = agentName;
  }

  public Account agentAddress(String agentAddress) {
    this.agentAddress = agentAddress;
    return this;
  }

   /**
   * Agent full address
   * @return agentAddress
  **/
  @Schema(required = true, description = "Agent full address")
  public String getAgentAddress() {
    return agentAddress;
  }

  public void setAgentAddress(String agentAddress) {
    this.agentAddress = agentAddress;
  }

  public Account agentPhonenumber(String agentPhonenumber) {
    this.agentPhonenumber = agentPhonenumber;
    return this;
  }

   /**
   * Agent phonenumber
   * @return agentPhonenumber
  **/
  @Schema(required = true, description = "Agent phonenumber")
  public String getAgentPhonenumber() {
    return agentPhonenumber;
  }

  public void setAgentPhonenumber(String agentPhonenumber) {
    this.agentPhonenumber = agentPhonenumber;
  }

  public Account companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Collector company name
   * @return companyName
  **/
  @Schema(required = true, description = "Collector company name")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public Account companyAddress(String companyAddress) {
    this.companyAddress = companyAddress;
    return this;
  }

   /**
   * Collector company address information
   * @return companyAddress
  **/
  @Schema(required = true, description = "Collector company address information")
  public String getCompanyAddress() {
    return companyAddress;
  }

  public void setCompanyAddress(String companyAddress) {
    this.companyAddress = companyAddress;
  }

  public Account companyPhonenumber(String companyPhonenumber) {
    this.companyPhonenumber = companyPhonenumber;
    return this;
  }

   /**
   * Collector company phonenumber
   * @return companyPhonenumber
  **/
  @Schema(required = true, description = "Collector company phonenumber")
  public String getCompanyPhonenumber() {
    return companyPhonenumber;
  }

  public void setCompanyPhonenumber(String companyPhonenumber) {
    this.companyPhonenumber = companyPhonenumber;
  }

  public Account limitMax(Float limitMax) {
    this.limitMax = limitMax;
    return this;
  }

   /**
   * Daily collection limit – The maximum amount that can be collected per day by this account.
   * @return limitMax
  **/
  @Schema(required = true, description = "Daily collection limit – The maximum amount that can be collected per day by this account.")
  public Float getLimitMax() {
    return limitMax;
  }

  public void setLimitMax(Float limitMax) {
    this.limitMax = limitMax;
  }

  public Account limitRemaining(Float limitRemaining) {
    this.limitRemaining = limitRemaining;
    return this;
  }

   /**
   * Collection limit remaining for the day (reset at 00:00 UTC).
   * @return limitRemaining
  **/
  @Schema(required = true, description = "Collection limit remaining for the day (reset at 00:00 UTC).")
  public Float getLimitRemaining() {
    return limitRemaining;
  }

  public void setLimitRemaining(Float limitRemaining) {
    this.limitRemaining = limitRemaining;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.balance, account.balance) &&
        Objects.equals(this.currency, account.currency) &&
        Objects.equals(this.key, account.key) &&
        Objects.equals(this.agentId, account.agentId) &&
        Objects.equals(this.agentName, account.agentName) &&
        Objects.equals(this.agentAddress, account.agentAddress) &&
        Objects.equals(this.agentPhonenumber, account.agentPhonenumber) &&
        Objects.equals(this.companyName, account.companyName) &&
        Objects.equals(this.companyAddress, account.companyAddress) &&
        Objects.equals(this.companyPhonenumber, account.companyPhonenumber) &&
        Objects.equals(this.limitMax, account.limitMax) &&
        Objects.equals(this.limitRemaining, account.limitRemaining);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balance, currency, key, agentId, agentName, agentAddress, agentPhonenumber, companyName, companyAddress, companyPhonenumber, limitMax, limitRemaining);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    agentId: ").append(toIndentedString(agentId)).append("\n");
    sb.append("    agentName: ").append(toIndentedString(agentName)).append("\n");
    sb.append("    agentAddress: ").append(toIndentedString(agentAddress)).append("\n");
    sb.append("    agentPhonenumber: ").append(toIndentedString(agentPhonenumber)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyAddress: ").append(toIndentedString(companyAddress)).append("\n");
    sb.append("    companyPhonenumber: ").append(toIndentedString(companyPhonenumber)).append("\n");
    sb.append("    limitMax: ").append(toIndentedString(limitMax)).append("\n");
    sb.append("    limitRemaining: ").append(toIndentedString(limitRemaining)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
