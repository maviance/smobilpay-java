/*
 * Smobilpay S3P API
 * Smobilpay Third Party API FOR PAYMENT COLLECTIONS
 *
 * OpenAPI spec version: 3.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.maviance.s3pjavaclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Merchant
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-18T05:58:05.742+01:00[Africa/Douala]")
public class Merchant {
  @SerializedName("merchant")
  private String merchant = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("country")
  private String country = null;

  /**
   * Merchant Status (Active | Inactive)
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("Active"),
    INACTIVE("Inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextObject();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("logo")
  private String logo = null;

  @SerializedName("logoHash")
  private String logoHash = null;

  public Merchant merchant(String merchant) {
    this.merchant = merchant;
    return this;
  }

   /**
   * Unique  merchant code. Use this value whenever \&quot;merchant\&quot; is required in request parameters.
   * @return merchant
  **/
  @Schema(required = true, description = "Unique  merchant code. Use this value whenever \"merchant\" is required in request parameters.")
  public String getMerchant() {
    return merchant;
  }

  public void setMerchant(String merchant) {
    this.merchant = merchant;
  }

  public Merchant name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of merchant
   * @return name
  **/
  @Schema(required = true, description = "Name of merchant")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Merchant description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Merchant description
   * @return description
  **/
  @Schema(required = true, description = "Merchant description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Merchant category(String category) {
    this.category = category;
    return this;
  }

   /**
   * deprecated  - will be removed in future versions. Use categories in services.
   * @return category
  **/
  @Schema(description = "deprecated  - will be removed in future versions. Use categories in services.")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public Merchant country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country of service operation (ISO 3166-1 alpha-3)
   * @return country
  **/
  @Schema(required = true, description = "Country of service operation (ISO 3166-1 alpha-3)")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Merchant status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Merchant Status (Active | Inactive)
   * @return status
  **/
  @Schema(required = true, description = "Merchant Status (Active | Inactive)")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Merchant logo(String logo) {
    this.logo = logo;
    return this;
  }

   /**
   * Points to a URL with the logo of the merchant if available.
   * @return logo
  **/
  @Schema(description = "Points to a URL with the logo of the merchant if available.")
  public String getLogo() {
    return logo;
  }

  public void setLogo(String logo) {
    this.logo = logo;
  }

  public Merchant logoHash(String logoHash) {
    this.logoHash = logoHash;
    return this;
  }

   /**
   * MD5 Hash of the logo provided via URL – if available. This field stores the hash of the logo. If the logo is updated the hash will change.
   * @return logoHash
  **/
  @Schema(description = "MD5 Hash of the logo provided via URL – if available. This field stores the hash of the logo. If the logo is updated the hash will change.")
  public String getLogoHash() {
    return logoHash;
  }

  public void setLogoHash(String logoHash) {
    this.logoHash = logoHash;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Merchant merchant = (Merchant) o;
    return Objects.equals(this.merchant, merchant.merchant) &&
        Objects.equals(this.name, merchant.name) &&
        Objects.equals(this.description, merchant.description) &&
        Objects.equals(this.category, merchant.category) &&
        Objects.equals(this.country, merchant.country) &&
        Objects.equals(this.status, merchant.status) &&
        Objects.equals(this.logo, merchant.logo) &&
        Objects.equals(this.logoHash, merchant.logoHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchant, name, description, category, country, status, logo, logoHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Merchant {\n");
    
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    logoHash: ").append(toIndentedString(logoHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
