/*
 * Smobilpay S3P API
 * Smobilpay Third Party API FOR PAYMENT COLLECTIONS
 *
 * OpenAPI spec version: 3.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.maviance.s3pjavaclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * Ping
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-02-18T05:58:05.742+01:00[Africa/Douala]")
public class Ping {
  @SerializedName("time")
  private LocalDate time = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("nonce")
  private String nonce = null;

  @SerializedName("key")
  private String key = null;

  public Ping time(LocalDate time) {
    this.time = time;
    return this;
  }

   /**
   * Current time on server + TZ (Format:ISO 8601)
   * @return time
  **/
  @Schema(required = true, description = "Current time on server + TZ (Format:ISO 8601)")
  public LocalDate getTime() {
    return time;
  }

  public void setTime(LocalDate time) {
    this.time = time;
  }

  public Ping version(String version) {
    this.version = version;
    return this;
  }

   /**
   * S3P API version
   * @return version
  **/
  @Schema(required = true, description = "S3P API version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public Ping nonce(String nonce) {
    this.nonce = nonce;
    return this;
  }

   /**
   * Nonce used in this request
   * @return nonce
  **/
  @Schema(required = true, description = "Nonce used in this request")
  public String getNonce() {
    return nonce;
  }

  public void setNonce(String nonce) {
    this.nonce = nonce;
  }

  public Ping key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Public token of the user used to send the request
   * @return key
  **/
  @Schema(required = true, description = "Public token of the user used to send the request")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ping ping = (Ping) o;
    return Objects.equals(this.time, ping.time) &&
        Objects.equals(this.version, ping.version) &&
        Objects.equals(this.nonce, ping.nonce) &&
        Objects.equals(this.key, ping.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, version, nonce, key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ping {\n");
    
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
